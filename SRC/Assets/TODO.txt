// Clone partout
Create Action existante (clone)
Replace Id partout



----
Biche

Actions: Idle, MoveTo, Boire, Manger, Fuir, Death

-----
Loup

Actions: Idle, MoveTo, Attack, Boire, Death, Manger, Grogner


Entité:
Idle, MoveTo, Boire, Manger, Death

Biche: 
Fuir,

Loup:
Grogner

IEntityAction

IWolfAction : IEntityAction

IDearAction : IEntityAction


WolfController
{
	Dictionnary<IdAction, IRefActionToExecute>
}
---------------------

Actions database autogénéré
=> Context auto généré aussi
=> Name action auto généré aussi

Consideration context auto généré
=> Context name
=> Get value from name (name auto généré)
=> on selectionne la curve / values

Options =>
Context a choisir
Name option a choisir
Actions int a choisir
Considerations int[] à choisir


Behaviour
Context a choisir
Name behaviour a choisir
Options int[] à choisir
Considerations int [] à choisir



------------------

Genere Consideration comme les actions

Creer une fake data complete
Generer une AI à partir de la fake data
La faire s'execute

------------

Implem Action, consideration, option, behaviour

Créer runtime ai,
Implem AI (think ...)


----------------------
Data :
AiInfo, ActionInfo, ConsiderationInfo, OptionInfo, BehaviourInfo
AiInfoDatabase => Constructeur delegate action / consideration + names compute

Runtime :
IUtilityAI, IAction, IConsideration, IOption, IBehaviour

DynamicAiConstructor => Construire l'ia. A besoin de tout de AiInfoDatabase pour créer action / consideration. Puis donne AiInfo pour lui sortir une IUtilityAI
-----------
Action pour s'executer
MoveToTarget => LaunchAction, passer la cible executant l'action, progress de l'action,
---

Consideration update
Tape dans le IContext convert pour lui puis get les values du icontext + interface consideration => calcule l'utility via la value calculé
-----------
IContext => Stock entités values + ref extern ?